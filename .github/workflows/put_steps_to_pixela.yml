name: Put the Number of Steps to Pixela

on:
  workflow_dispatch:
  push:
  schedule:
    # アクティビティのデータは日付が変わるまで取得できない(nullが返る)
    # 日付（UTC）が変わってから昨日のデータを取得し記録する
    - cron: 01 00 * * *

jobs:
  record:
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set current datetime
        id: check
        run: |
          echo ::set-output name=target_date_minus_1_day::$(date +"%Y-%m-%d" --date "2 days ago")
          echo ::set-output name=target_date::$(date +"%Y-%m-%d" --date "1 day ago")
          echo ::set-output name=date_to_record::$(date +"%Y%m%d" --date "1 day ago")

      - name: Count Steps
        id: count
        run: |
          echo ::set-output name=steps::$(curl --location --request GET \
          "https://api.ouraring.com/v2/usercollection/daily_activity?start_date=${{ env.START_DATE }}&end_date=${{ env.END_DATE }}" \
          --header "Authorization: Bearer ${{ env.OURA_USER_TOKEN }}" | jq ".data[].steps")
        env:
          OURA_USER_TOKEN: ${{ secrets.OURA_USER_TOKEN }}
          START_DATE: ${{ steps.check.outputs.target_date_minus_1_day }}
          END_DATE: "${{ steps.check.outputs.target_date}}"

      # - name: Manage Steps
      #   id: manage
      #   # OuraRingの歩数が多めにカウントされがちなので調整する
      #   run: |
      #     echo ::set-output name=steps::$(echo ${{ steps.count.outputs.steps }} - 1000)

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: tools/sincelastcommit/go.mod

      - name: Install pi
        run: |
          go install github.com/a-know/pi/cmd/pi@latest

      - name: Put Data to Pixela
        run: |
          pi pixel post -u ${{ env.USER_NAME }} -g ${{ env.GRAPH_NAME }} -d ${{ env.DATE }} -q ${{ env.QUANTITY }}
        env:
          PIXELA_USER_TOKEN: ${{ secrets.PIXELA_USER_TOKEN }}
          USER_NAME: mom0tomo
          GRAPH_NAME: pedometer
          DATE: ${{ steps.check.outputs.date_to_record }}
          QUANTITY: ${{ steps.count.outputs.steps }}
          # QUANTITY: ${{ steps.manage.outputs.steps }}

      - name: Notify Slack
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: devnull
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Pixelaに歩数を記録しました :footprints:"
          SLACK_ICON_EMOJI: ":footprints:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.0
        env:
          SLACK_CHANNEL: devnull
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "歩数の記録に失敗しました"
          SLACK_ICON_EMOJI: ":rotating_light:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
