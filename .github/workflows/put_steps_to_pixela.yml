name: Put the Number of Steps to Pixela

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: 55 14 * * * # JST 23:55 every day

jobs:
  record:
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set current datetime
        id: check
        run: |
          echo "date=$(date +"%Y%m%d")" >> $GITHUB_OUTPUT

      # ref: https://cloud.ouraring.com/v2/docs#tag/Daily-Activity
      - name: Count Steps
        id: count
        run: |
          echo "steps=$(curl --location --request GET \
          https://api.ouraring.com/v2/usercollection/daily_activity \
          --header 'Authorization: Bearer ${{ env.OURA_USER_TOKEN }}' | jq '.data[].steps')" >> $GITHUB_OUTPUT
        env:
          OURA_USER_TOKEN: ${{ secrets.OURA_USER_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: tools/sincelastcommit/go.mod

      - name: Install pi
        run: |
          go install github.com/a-know/pi/cmd/pi@latest

      - name: Corrects the Number of Steps
        id: correct
        # Oura Ringの歩数は仕事のある日は1000歩/休みの日は500歩くらい多く出るので調整する
        # https://github.com/orgs/community/discussions/25386#discussioncomment-3247730
        run: |
          echo "steps=$((${{ env.STEPS }} - 850))" >> $GITHUB_OUTPUT
        env:
          STEPS: ${{ steps.count.outputs.steps }}

      - name: Put Data to Pixela
        run: |
          pi pixel post -u ${{ env.USER_NAME }} -g ${{ env.GRAPH_NAME }} -d ${{ env.DATE }} -q ${{ env.QUANTITY }}
          echo "steps=${{ env.QUANTITY }}" >> $GITHUB_OUTPUT
        env:
          PIXELA_USER_TOKEN: ${{ secrets.PIXELA_USER_TOKEN }}
          USER_NAME: mom0tomo
          GRAPH_NAME: pedometer
          DATE: ${{ steps.check.outputs.date }}
          QUANTITY: ${{ steps.correct.outputs.steps }}

      # 月平均等を出したいのでスプレッドシートにも転機する
      - name: Put Data to Spreadsheet
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ secrets.GSHEET_ID }}
          commands: |
            [
              { "command": "appendData", "args": { "data": [[ ${{ env.STEPS }} ]], "minCol": 1, } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
          STEPS: ${{ steps.correct.outputs.steps }}

      - name: Notify Slack on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: devnull
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Pixelaに歩数を記録しました :footprints:"
          SLACK_ICON_EMOJI: ":footprints:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.0
        env:
          SLACK_CHANNEL: devnull
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "歩数の記録に失敗しました :rotating_light:"
          SLACK_ICON_EMOJI: ":rotating_light:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
